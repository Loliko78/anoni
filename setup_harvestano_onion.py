#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞ harvestano.onion
"""

import os
import subprocess
import time
import platform
from pathlib import Path

def create_custom_onion_config():
    """–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–º–µ–Ω–∞ harvestano.onion"""
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
    config = """# Tor –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è harvestano.onion
SocksPort 9050
HiddenServiceDir ./harvestano_onion_service
HiddenServicePort 80 127.0.0.1:10000
DataDirectory ./harvestano_tor_data
Log notice file ./harvestano_tor.log

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
HiddenServiceVersion 3
"""
    
    with open('harvestano_torrc', 'w') as f:
        f.write(config)
    
    print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è harvestano.onion —Å–æ–∑–¥–∞–Ω–∞: harvestano_torrc")

def create_onion_directories():
    """–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è harvestano.onion"""
    directories = ['harvestano_onion_service', 'harvestano_tor_data']
    
    for directory in directories:
        Path(directory).mkdir(exist_ok=True)
    
    print("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è harvestano.onion —Å–æ–∑–¥–∞–Ω—ã")

def generate_onion_address():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º .onion –∞–¥—Ä–µ—Å (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫)"""
    print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è .onion –∞–¥—Ä–µ—Å–∞...")
    print("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
    
    max_attempts = 10
    attempt = 0
    
    while attempt < max_attempts:
        attempt += 1
        print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}...")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π Tor –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
        stop_tor()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Tor —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        if platform.system().lower() == "windows":
            subprocess.Popen(['tor.exe', '-f', 'harvestano_torrc'], 
                           stdout=subprocess.DEVNULL, 
                           stderr=subprocess.DEVNULL)
        else:
            subprocess.Popen(['./tor', '-f', 'harvestano_torrc'], 
                           stdout=subprocess.DEVNULL, 
                           stderr=subprocess.DEVNULL)
        
        # –ñ–¥–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–∞
        time.sleep(30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
        hostname_file = Path('harvestano_onion_service/hostname')
        if hostname_file.exists():
            with open(hostname_file, 'r') as f:
                onion_address = f.read().strip()
            
            print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–¥—Ä–µ—Å: {onion_address}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∞–¥—Ä–µ—Å "harvestano" (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ)
            if 'harvestano' in onion_address.lower():
                print("üéâ –£–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å —Å 'harvestano'!")
                return onion_address
            else:
                print(f"–ê–¥—Ä–µ—Å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'harvestano': {onion_address}")
                print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏...")
        
        time.sleep(5)
    
    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–π –∞–¥—Ä–µ—Å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
    hostname_file = Path('harvestano_onion_service/hostname')
    if hostname_file.exists():
        with open(hostname_file, 'r') as f:
            onion_address = f.read().strip()
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: {onion_address}")
        return onion_address
    
    return None

def stop_tor():
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Tor –ø—Ä–æ—Ü–µ—Å—Å"""
    try:
        if platform.system().lower() == "windows":
            subprocess.run(['taskkill', '/f', '/im', 'tor.exe'], 
                         stdout=subprocess.DEVNULL, 
                         stderr=subprocess.DEVNULL)
        else:
            subprocess.run(['pkill', 'tor'], 
                         stdout=subprocess.DEVNULL, 
                         stderr=subprocess.DEVNULL)
        time.sleep(2)
    except:
        pass

def update_android_config(onion_address):
    """–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    if not onion_address:
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º MainActivity.java
    main_activity_path = Path('HarvestanoApp/app/src/main/java/com/harvestano/app/MainActivity.java')
    
    if main_activity_path.exists():
        with open(main_activity_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–≥–ª—É—à–∫—É –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å
        content = content.replace(
            'return "harvestano.onion";',
            f'return "{onion_address}";'
        )
        
        with open(main_activity_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"Android –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å –∞–¥—Ä–µ—Å–æ–º: {onion_address}")

def create_startup_script(onion_address):
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å harvestano.onion"""
    script_content = f"""@echo off
echo ========================================
echo    –ó–∞–ø—É—Å–∫ Harvestano —Å Tor
echo ========================================
echo.

REM –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π Tor
taskkill /f /im tor.exe 2>nul

REM –ó–∞–ø—É—Å–∫–∞–µ–º Tor —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π harvestano.onion
echo –ó–∞–ø—É—Å–∫–∞–µ–º Tor —Å–µ—Ä–≤–µ—Ä...
start /b tor.exe -f harvestano_torrc

REM –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Tor
timeout /t 15 /nobreak >nul

REM –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...
python run_with_tor.py

pause
"""
    
    with open('start_harvestano_tor.bat', 'w') as f:
        f.write(script_content)
    
    print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω: start_harvestano_tor.bat")

def main():
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ harvestano.onion")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Tor
    tor_executable = 'tor.exe' if platform.system().lower() == "windows" else './tor'
    
    if not os.path.exists(tor_executable):
        print("‚ùå Tor –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ tor_setup.py")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    create_custom_onion_config()
    create_onion_directories()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º .onion –∞–¥—Ä–µ—Å
    onion_address = generate_onion_address()
    
    if onion_address:
        print(f"\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"Onion –∞–¥—Ä–µ—Å: http://{onion_address}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º Android –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        update_android_config(onion_address)
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
        create_startup_script(onion_address)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å
        with open('harvestano_onion_address.txt', 'w') as f:
            f.write(onion_address)
        
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: start_harvestano_tor.bat")
        print("2. –°–æ–±–µ—Ä–∏—Ç–µ APK: build_tor_apk.bat")
        print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK –Ω–∞ Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
        print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Orbot –∏ –≤–∫–ª—é—á–∏—Ç–µ VPN")
        print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å .onion –∞–¥—Ä–µ—Å")

if __name__ == "__main__":
    main() 