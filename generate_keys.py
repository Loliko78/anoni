#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö 32-–±–∞–π—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
"""

import base64

# –°–æ–∑–¥–∞–µ–º 32-–±–∞–π—Ç–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å—Ç—Ä–æ–∫
keys_data = [
    "testkeytestkeytestkeytestkeytestkey",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "secretkeysecretkeysecretkeysecretkey",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "anonymouskeyanonymouskeyanonymouskey",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "darknetkeydarknetkeydarknetkeydarknet",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "hackerkeyhackerkeyhackerkeyhackerkey",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "privacykeyprivacykeyprivacykeyprivacy",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "encryptionkeyencryptionkeyencryption",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "securitykeysecuritykeysecuritykeysecur",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "torkeytorkeytorkeytorkeytorkeytorkey",  # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "signalkeysignalkeysignalkeysignalkey"   # 30 —Å–∏–º–≤–æ–ª–æ–≤ + –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
]

print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö 32-–±–∞–π—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π...")
print()

for i, key_data in enumerate(keys_data, 1):
    # –î–æ–ø–æ–ª–Ω—è–µ–º –¥–æ 32 –±–∞–π—Ç
    if len(key_data) < 32:
        key_data = key_data.ljust(32, '0')  # –î–æ–ø–æ–ª–Ω—è–µ–º –Ω—É–ª—è–º–∏
    elif len(key_data) > 32:
        key_data = key_data[:32]  # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
    key_b64 = base64.b64encode(key_data.encode('utf-8')).decode('utf-8')
    
    print(f"–ö–ª—é—á {i}: {key_b64}")
    print(f"–î–ª–∏–Ω–∞: {len(key_data)} —Å–∏–º–≤–æ–ª–æ–≤, {len(base64.b64decode(key_b64))} –±–∞–π—Ç")
    print()

print("‚úÖ –í—Å–µ –∫–ª—é—á–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–ª–∏–Ω—É 32 –±–∞–π—Ç–∞!") 