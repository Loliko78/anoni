#!/usr/bin/env python3
"""
Simple Web Server for Flask App
Runs on local network without tunnels
"""

import subprocess
import sys
import time
import socket
import requests
from threading import Thread

def get_local_ip():
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≤–Ω–µ—à–Ω–µ–º—É —Å–µ—Ä–≤–µ—Ä—É —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –Ω–∞—à IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        return "127.0.0.1"

def check_port(port):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        result = sock.connect_ex(('localhost', port))
        sock.close()
        return result == 0
    except:
        return False

def run_flask():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö
        subprocess.run([sys.executable, 'app.py'], check=True)
    except KeyboardInterrupt:
        print("\nüõë Flask –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def show_network_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏"""
    local_ip = get_local_ip()
    
    print("=" * 60)
    print("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏")
    print("=" * 60)
    print()
    print("üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:")
    print(f"   –õ–æ–∫–∞–ª—å–Ω–æ:     http://localhost:10000")
    print(f"   –í —Å–µ—Ç–∏:       http://{local_ip}:10000")
    print()
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –æ–¥–Ω–æ–π —Å–µ—Ç–∏")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ/–ø–ª–∞–Ω—à–µ—Ç–µ")
    print("3. –í–≤–µ–¥–∏—Ç–µ URL: http://" + local_ip + ":10000")
    print()
    print("‚ö†Ô∏è  –í–∞–∂–Ω–æ:")
    print("- –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä Windows –º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    print("- –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –¥–ª—è Python –≤ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–µ")
    print("- –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ–¥–Ω–æ–π Wi-Fi —Å–µ—Ç–∏")
    print()
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 60)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê –ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Flask")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    if check_port(10000):
        print("‚ö†Ô∏è  –ü–æ—Ä—Ç 10000 —É–∂–µ –∑–∞–Ω—è—Ç!")
        print("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É")
        return
    
    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("- –ü–æ—Ä—Ç: 10000")
    print("- –î–æ—Å—Ç—É–ø: –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å")
    print("- –¢—É–Ω–Ω–µ–ª–∏: –ù–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = Thread(target=run_flask, daemon=True)
    flask_thread.start()
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Flask
    print("‚è≥ –ó–∞–ø—É—Å–∫–∞—é Flask...")
    time.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏
    show_network_info()
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        sys.exit(0) 