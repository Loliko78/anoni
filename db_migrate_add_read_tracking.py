#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import sqlite3
import os

def migrate():
    """–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    db_path = 'instance/harvest.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É Chat
        cursor.execute("""
            ALTER TABLE chat 
            ADD COLUMN last_read_user1 DATETIME
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ last_read_user1 –≤ —Ç–∞–±–ª–∏—Ü—É chat")
        
        cursor.execute("""
            ALTER TABLE chat 
            ADD COLUMN last_read_user2 DATETIME
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ last_read_user2 –≤ —Ç–∞–±–ª–∏—Ü—É chat")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü—É group_member
        cursor.execute("""
            ALTER TABLE group_member 
            ADD COLUMN last_read DATETIME
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ last_read –≤ —Ç–∞–±–ª–∏—Ü—É group_member")
        
        conn.commit()
        print("üéØ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except sqlite3.OperationalError as e:
        if "duplicate column name" in str(e):
            print("‚ö†Ô∏è  –ü–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    migrate() 