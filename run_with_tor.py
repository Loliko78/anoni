#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Tor
"""

import os
import sys
import subprocess
import time
import platform
from pathlib import Path

def check_tor_running():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Tor"""
    try:
        if platform.system().lower() == "windows":
            result = subprocess.run(['tasklist', '/FI', 'IMAGENAME eq tor.exe'], 
                                  capture_output=True, text=True)
            return 'tor.exe' in result.stdout
        else:
            result = subprocess.run(['pgrep', 'tor'], capture_output=True)
            return result.returncode == 0
    except:
        return False

def start_tor():
    """–ó–∞–ø—É—Å–∫–∞–µ–º Tor –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω"""
    if check_tor_running():
        print("‚úÖ Tor —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
        return True
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Tor...")
    
    try:
        if platform.system().lower() == "windows":
            if os.path.exists('tor.exe'):
                subprocess.Popen(['tor.exe', '-f', 'torrc'], 
                               stdout=subprocess.DEVNULL, 
                               stderr=subprocess.DEVNULL)
            else:
                print("‚ùå Tor –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ tor_setup.py")
                return False
        else:
            if os.path.exists('./tor'):
                subprocess.Popen(['./tor', '-f', 'torrc'], 
                               stdout=subprocess.DEVNULL, 
                               stderr=subprocess.DEVNULL)
            else:
                print("‚ùå Tor –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ tor_setup.py")
                return False
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Tor
        print("‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Tor...")
        time.sleep(15)
        
        if check_tor_running():
            print("‚úÖ Tor —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Tor")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Tor: {e}")
        return False

def get_onion_address():
    """–ü–æ–ª—É—á–∞–µ–º .onion –∞–¥—Ä–µ—Å"""
    hostname_file = Path('tor_hidden_service/hostname')
    
    if hostname_file.exists():
        with open(hostname_file, 'r') as f:
            onion_address = f.read().strip()
        return onion_address
    else:
        return None

def start_flask_app():
    """–ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üåê –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Tor
    os.environ['FLASK_ENV'] = 'production'
    os.environ['TOR_ENABLED'] = 'true'
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        from app import app, socketio
        
        # –ü–æ–ª—É—á–∞–µ–º onion –∞–¥—Ä–µ—Å
        onion_address = get_onion_address()
        if onion_address:
            print(f"üîó Onion –∞–¥—Ä–µ—Å: http://{onion_address}")
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 10000...")
        print("üì± Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Tor")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å SocketIO
        socketio.run(app, debug=False, host='127.0.0.1', port=10000)
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Flask: {e}")

def main():
    print("üåê –ó–∞–ø—É—Å–∫ Harvestano —Å Tor")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Tor
    if not os.path.exists('torrc'):
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Tor –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: python tor_setup.py")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Tor
    if not start_tor():
        return
    
    # –ü–æ–ª—É—á–∞–µ–º onion –∞–¥—Ä–µ—Å
    onion_address = get_onion_address()
    if onion_address:
        print(f"üéØ –í–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://{onion_address}")
    else:
        print("‚ö†Ô∏è Onion –∞–¥—Ä–µ—Å –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Orbot (Tor –¥–ª—è Android)")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Orbot –∏ –≤–∫–ª—é—á–∏—Ç–µ VPN")
    print("3. –í Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ Tor")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
    start_flask_app()

if __name__ == "__main__":
    main() 